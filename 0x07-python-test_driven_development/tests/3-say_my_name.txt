``3-say_my_name test module``

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Sammy", "Sammy")
    My name is Sammy Sammy

::

    >>> say_my_name("Sammy Akpan", "Sammy Akpan")
    My name is Sammy Akpan Sammy Akpan

The parameter ```last_name``` is optional. If no last name is provided,
an empty string is printed instead.

::

    >>> say_my_name("Sammy")
    My name is Sammy 

Invalid Names
=============

The parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(6, "Sammy Akpan")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Sammy", ["Names", "Age", "No"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"LeBron": 6, "James": 23}, 7.7)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

At least one name must be provided.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
